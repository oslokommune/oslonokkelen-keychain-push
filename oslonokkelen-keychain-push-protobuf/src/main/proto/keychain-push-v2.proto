syntax = "proto3";

package com.github.oslokommune.oslonokkelen.push.proto;

option java_outer_classname = "KeychainPushApiV2";
option java_multiple_files = false;


// Content-Type: application/protobuf;type=system-description
message SystemDescriptionResponse {

  // Short system name
  string name = 1;

  // A short text describing useful data like contact information etc.
  string information = 2;

  // List off assets your system is allowed to hand out permissions for
  repeated Asset assets = 3;

  // The system id
  string id = 4;

  message Asset {
    string id = 1;
  }

}

// Used both to push the original permission as well as updating
message PushRequest {

  // Identifies the permission. Client side generated to avoid issues related to double posting.
  // You will use this id later to query the state of a permission or post updates.
  string id = 1;

  // Human readable title. Will show up in the app.
  string title = 2;

  // Determines what the recipients will be granted access to and when.
  repeated Permission permissions = 3;

  // Who will get the permissions. They will have to verify their phone numbers in
  // Oslonøkkelen before the permission you have pushed can be associated with their profiles.
  repeated Recipient recipients = 4;

  // Optional
  // Any additional information that should be presented to the user in the app.
  // Keep it short and to the point.
  AdditionalInformation additionalInformation = 5;

  // Optional.
  // Use this to point a user to a page where they can see details and modify their booking etc.
  Link informationLink = 6;


  message Permission {
    LocalDateTimeInterval timeInterval = 1;
    repeated string assetIds = 2;
  }

  message Recipient {
    oneof recipient {
      PhoneNumber phoneNumber = 1;
    }
  }

}

// Content-Type: application/protobuf;type=push-response
message PushResponse {

}

message Link {
  string title = 1;
  string uri = 2 ;
}

message AdditionalInformation {
  string content = 1;
  Type type = 2 ;

  enum Type {
    PLAIN_TEXT = 0 ;
    MARKDOWN = 1;
  }
}


message PhoneNumber {
  // Two digits
  string countryCode = 1;
  string number = 2;
}

message LocalDateTimeInterval {
  LocalDateTime from = 1;
  LocalDateTime until = 2;
}

message LocalDateTime {
  string date = 1;
  string time = 2;
}


// Content-Type: application/protobuf;type=error
message ErrorResponse {

  // Says something about what went wrong and what can be done about it.
  ErrorCode errorCode = 1;

  // Optional debug message. This is _not_ intended for the end user, but it can
  // contain useful technical information for debugging problems.
  string technicalDebugMessage = 2;

  enum ErrorCode {

    // Unexpected error.
    UNKNOWN = 0;

    // Id or key is wrong. Please don't try again without
    // fixing the credentials.
    INVALID_CREDENTIALS = 1;

    // Something is wrong with the response from Oslonøkkelen
    INVALID_RESPONSE = 2;

    // The permission you asked for does not exist. 
    UNKNOWN_PERMISSION = 3;

  }

}

// Content-Type: application/protobuf;type=state
message StateResponse {

  int32 version = 1;

  repeated PendingRecipient pendingRecipients = 2;
  repeated ConfirmedRecipient confirmedRecipients = 3;

  // Optional
  AdditionalInformation additionalInformation = 5;

  // Optional
  Link informationLink = 6;


  // Recipient waiting to be associated with a profile in Oslonøkkelen.
  message PendingRecipient {
    PhoneNumber phoneNumber = 1;
  }

  message ConfirmedRecipient {

    // The phone number used assigning the permission
    PhoneNumber phoneNumber = 1;

    // How many times the permission has been used by the recipient
    int32 usageCounter = 2;

    // When the recipient was associated with a profile
    int64 confirmedAtEpochSeconds = 3;

  }

}